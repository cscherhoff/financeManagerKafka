{
	"info": {
		"_postman_id": "e1a508e8-7910-402b-bab8-3a106b202121",
		"name": "Finance App MS KAFKA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Allocation",
			"item": [
				{
					"name": "Get initial income",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('0');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{allocationPort}}/income/user/1",
							"host": [
								"{{host}}"
							],
							"port": "{{allocationPort}}",
							"path": [
								"income",
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update income to 2458.47",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "2458.47",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{allocationPort}}/income/user/1",
							"host": [
								"{{host}}"
							],
							"port": "{{allocationPort}}",
							"path": [
								"income",
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get income after update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('2458.47');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{allocationPort}}/income/user/1",
							"host": [
								"{{host}}"
							],
							"port": "{{allocationPort}}",
							"path": [
								"income",
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get initial allocation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('{\"userId\":1,\"investment\":0,\"fixCosts\":0,\"categories\":0}');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{allocationPort}}/allocation/user/1",
							"host": [
								"{{host}}"
							],
							"port": "{{allocationPort}}",
							"path": [
								"allocation",
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update allocation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"investment\":496.97,\"fixCosts\":1074.31,\"categories\":428.99}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{allocationPort}}/allocation/user/1",
							"host": [
								"{{host}}"
							],
							"port": "{{allocationPort}}",
							"path": [
								"allocation",
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get allocation after update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.body('{\"userId\":1,\"investment\":496.97,\"fixCosts\":1074.31,\"categories\":428.99}');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{allocationPort}}/allocation/user/1",
							"host": [
								"{{host}}"
							],
							"port": "{{allocationPort}}",
							"path": [
								"allocation",
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Try to upload invalid allocation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test response and status\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.message).to.eql('The sum of the values for investments, fix costs and categories must not be greater tha the income.The value of the sum is 52000.27 and the income is 2458.47');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"investment\":496.97,\"fixCosts\":51074.31,\"categories\":428.99}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{allocationPort}}/allocation/user/1",
							"host": [
								"{{host}}"
							],
							"port": "{{allocationPort}}",
							"path": [
								"allocation",
								"user",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "expensePort",
			"value": "8083"
		},
		{
			"key": "investmentPort",
			"value": "8084"
		},
		{
			"key": "accountPort",
			"value": "8082"
		},
		{
			"key": "host",
			"value": "http://localhost"
		},
		{
			"key": "girokontoName",
			"value": "girokonto"
		},
		{
			"key": "depotName",
			"value": "degiro"
		},
		{
			"key": "kontoName",
			"value": "Konto"
		},
		{
			"key": "depotNameDividend",
			"value": "flatex"
		},
		{
			"key": "pathDepotEntry",
			"value": "depotEntries"
		},
		{
			"key": "allocationPort",
			"value": "8085",
			"type": "default"
		}
	]
}